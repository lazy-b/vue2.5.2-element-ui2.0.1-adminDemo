{"version":3,"sources":["webpack:///static/js/1.3d0ae65930ad35a1233f.js","webpack:///./src/common/js/validateRules.js","webpack:///./src/api/table.js","webpack:///./src/common/js/tableView.config.js","webpack:///./src/components/main/views/Table.vue?629c","webpack:///./src/components/main/views/Table.vue","webpack:///./src/components/main/views/Table.vue?93d2","webpack:///./src/components/main/views/Table.vue?1f24","webpack:///src/components/main/views/Table.vue"],"names":["webpackJsonp","8ZxV","module","__webpack_exports__","__webpack_require__","d","rules","name","region","required","message","trigger","date1","type","date2","resource","desc","OVQD","crud","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default","n","__WEBPACK_IMPORTED_MODULE_1_axios__","__WEBPACK_IMPORTED_MODULE_1_axios___default","baseURL","ORDERINFO","ORDERSCHEDULE","requestParams","tableName","toUpperCase","base","myPromise","method","a","get","post","data","reject","Error","then","error","console","log","TqVl","Object","defineProperty","value","orderInfo","orderSchedule","autoComplete","sortable","field","title","width","componentTag","rule","placeholder","ixd3","render","_vm","this","_h","$createElement","_c","_self","directives","rawName","expression","staticClass","attrs","span","size","icon","round","on","click","addHandler","_v","batchDeleteHandler","reloadHandler","offset","ref","inline","placement","popper-class","wheel","$event","preventDefault","autoCompleteWheel","_l","index","key","autoCompleteClick","_s","slot","spellcheck","focus","autoCompleteFocus","targetObj","targetKey","sourceKey","searchForm","valueType","model","callback","$$v","$set","trim","filterable","change","changeKeyValue","label","offlineSearch","datagridData","border","stripe","empty-text","height","tableHeight","select","selected","select-all","item","prop","formatter","tableFormat","show-overflow-tooltip","fixed","scopedSlots","_u","fn","scope","editHandler","$index","row","deleteHandler","dialogTitle","center","append-to-body","close-on-click-modal","close-on-press-escape","visible","dialogFormVisible","update:visible","form","label-width","visible-arrow","tag","saveRow","staticRenderFns","esExports","o50x","injectStyle","ssrContext","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_4_0_vue_loader_lib_selector_type_script_index_0_Table_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_4_0_vue_loader_lib_template_compiler_index_id_data_v_30a98806_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_13_4_0_vue_loader_lib_selector_type_template_index_0_Table_vue__","normalizeComponent","__vue_styles__","Component","xjCN","exports","content","i","locals","yil3","push","version","sources","names","mappings","file","sourcesContent","sourceRoot","zsio","__WEBPACK_IMPORTED_MODULE_0__api_table__","__WEBPACK_IMPORTED_MODULE_1__common_js_validateRules__","__WEBPACK_IMPORTED_MODULE_2__common_js_tableView_config__","datagridConfig","hasGetData","sourceData","isSearch","valueTypeArr","searchValue","selection","editRow","params","ids","id","orderNo","productName","autoCompleteConfig","sliceBegin","showLen","resultLen","autoCompleteTarget","format","date","computed","filterData","filterKey","filterValue","filter","autoCompleteValueArr","tagValue","result","config","target","begin","end","length","v","toLowerCase","indexOf","slice","document","body","clientHeight","documentElement","methods","getData","_this","res","tableInfo","setAutoList","$alert","confirmButtonText","action","$message","e","obj","len","deltaY","srcElement","innerText","_this2","$confirm","cancelButtonText","status","_index","msg","splice","catch","_this3","selections","selectIds","join","_i","_this4","$refs","validate","newData","_this5","column","cellValue","string","property","Date","getFullYear","getMonth","getDate","mounted","_this6","$nextTick","$route","$router","replace"],"mappings":"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","file":"static/js/1.3d0ae65930ad35a1233f.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ \"8ZxV\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return rules; });\n/*\r\n* @Author: yang\r\n* @Date:   2017-10-17 21:54:01\r\n* @Last Modified by:   yang\r\n* @Last Modified time: 2017-11-04 11:16:03\r\n*/\n\n// 占个位，并没有实现\nvar rules = {\n  name: [],\n  region: [{ required: true, message: '请选择活动区域', trigger: 'change' }],\n  date1: [{ type: 'date', required: true, message: '请选择日期', trigger: 'change' }],\n  date2: [{ type: 'date', required: true, message: '请选择时间', trigger: 'change' }],\n  type: [{ type: 'array', required: true, message: '请至少选择一个活动性质', trigger: 'change' }],\n  resource: [{ required: true, message: '请选择活动资源', trigger: 'change' }],\n  desc: [{ required: true, message: '请填写活动形式', trigger: 'blur' }]\n};\n\n/***/ }),\n\n/***/ \"OVQD\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return crud; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(\"rVsN\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios__ = __webpack_require__(\"yEoQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_axios__);\n\n/*\r\n* @Author: yang\r\n* @Date:   2017-10-12 17:37:16\r\n* @Last Modified by:   yang\r\n* @Last Modified time: 2017-11-04 11:21:03\r\n*/\n\n// 全局请求拦截器在main.js中配置\n\n\n/* 数据增删改查模块\r\n * requestParams：调用dao的请求参数\r\n * requestParams = {\r\n *    method: '', // 请求操作类型\r\n *    params: {} // 请求附带参数\r\n * }\r\n */\n\n// 请求路径-表名映射\nvar baseURL = {\n  ORDERINFO: '../../orderInfo',\n  ORDERSCHEDULE: '../../orderSchedule'\n};\nvar crud = function crud(requestParams) {\n\n  var tableName = requestParams.name.toUpperCase(),\n      base = baseURL[tableName],\n      // 根据请求的表名取出对应请求路径\n  myPromise = null; // 返回的Promise 对象\n\n  switch (requestParams.method.toUpperCase()) {\n    // 获取整个表格数据\n    case 'GET':\n      myPromise = __WEBPACK_IMPORTED_MODULE_1_axios___default.a.get(base + '/list.do');\n      break;\n    // 新增数据\n    case 'ADD':\n      myPromise = __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(base + '/insert.do', { data: requestParams.data });\n      break;\n    // 删除数据\n    // params: {ids: ids}\n    // ids为用逗号分隔开每个id的字符串\n    case 'DELETE':\n      myPromise = __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(base + '/deleteBatch.do', { data: requestParams.data });\n      break;\n    // 修改数据\n    case 'EDIT':\n      myPromise = __WEBPACK_IMPORTED_MODULE_1_axios___default.a.post(base + '/update.do', { data: requestParams.data });\n      break;\n    // 查找数据，目前使用离线搜索，故不需要这个功能\n    // case 'QUERY':\n    //   myPromise = axios.post(`${base}/list.do`, { params: requestParams.params });\n    //   break;\n    // 都不匹配则同样返回rejected状态\n    default:\n      // 使用error进行堆栈跟踪\n      myPromise = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.reject(new Error(\"请求参数有误\")).then(null, function (error) {\n        console.log(error);\n      });\n  }\n\n  return myPromise;\n};\n\n/***/ }),\n\n/***/ \"TqVl\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"orderInfo\", function() { return orderInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"orderSchedule\", function() { return orderSchedule; });\n/*\r\n* @Author: yang\r\n* @Date:   2017-10-16 20:17:50\r\n* @Last Modified by:   yang\r\n* @Last Modified time: 2017-10-31 13:57:44\r\n*/\n// 订单信息表\nvar orderInfo = [{ autoComplete: true, sortable: true, field: \"orderNo\", title: \"订单号\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: true, sortable: true, field: \"productName\", title: \"产品名称\", width: 120, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: false, sortable: true, field: \"orderAmount\", title: \"订单数量\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: false, sortable: true, field: \"stockAmount\", title: \"库存\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: false, sortable: true, field: \"spareParts\", title: \"备品\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: false, sortable: true, field: \"planAmount\", title: \"需生产数\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: false, sortable: true, field: \"orderDate\", title: \"下单日期\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date' }, { autoComplete: false, sortable: true, field: \"requiredDate\", title: \"要求交货日期\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date' }, { autoComplete: false, sortable: true, field: \"replyDate\", title: \"交期\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date' }, { autoComplete: false, sortable: true, field: \"purchaseRequirement\", title: \"特别要求\", width: 180, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: 'textarea' }, { autoComplete: true, sortable: true, field: \"materialCoding\", title: \"物料长代码\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: true, sortable: true, field: \"materialModel\", title: \"规格型号\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: true, sortable: true, field: \"orderStatus\", title: \"生产状态\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: true, sortable: true, field: \"remark\", title: \"备注\", width: 140, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: 'textarea' }, { autoComplete: true, sortable: true, field: \"exceptionReason\", title: \"异常原因\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: true, sortable: true, field: \"orderType\", title: \"订单类型\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: false, sortable: true, field: \"price\", title: \"单价\", width: 80, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }];\n\n// 订单进度表\nvar orderSchedule = [{ autoComplete: true, sortable: true, field: \"orderNo\", title: \"订单号\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: true, sortable: true, field: \"productName\", title: \"产品名称\", width: 120, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: false, sortable: true, field: \"batch\", title: \"批次\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: false, sortable: true, field: \"reciverOrder\", title: \"下单日期\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date' }, { autoComplete: false, sortable: true, field: \"planProductTime\", title: \"计划生产开始时间\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date' }, { autoComplete: false, sortable: true, field: \"productStatus\", title: \"生产开始状态\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: false, sortable: true, field: \"planProductFinish\", title: \"计划生产完成时间\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date' }, { autoComplete: false, sortable: true, field: \"productFinishStatus\", title: \"生产完成状态\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }, { autoComplete: false, sortable: true, field: \"planOrderFinish\", title: \"订单计划完成时间\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date' }, { autoComplete: false, sortable: true, field: \"orderFinishStatus\", title: \"订单完成状态\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: '' }];\n\n/***/ }),\n\n/***/ \"ixd3\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hasGetData),expression:\"hasGetData\"}],staticClass:\"table my-datagrid\"},[_c('el-row',{staticClass:\"edit-button\"},[_c('el-col',{attrs:{\"span\":12}},[_c('div',{staticClass:\"grid-content\"},[_c('el-button',{attrs:{\"size\":\"medium\",\"type\":\"primary\",\"icon\":\"el-icon-plus\",\"round\":\"\"},on:{\"click\":_vm.addHandler}},[_vm._v(\"\\n          新增一行\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"medium\",\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"round\":\"\"},on:{\"click\":_vm.batchDeleteHandler}},[_vm._v(\"\\n          批量删除\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"medium\",\"type\":\"warning\",\"round\":\"\"},on:{\"click\":_vm.reloadHandler}},[_vm._v(\"\\n          重新加载\\n        \")])],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form',{ref:\"searchForm\",staticClass:\"inline-form\",attrs:{\"inline\":\"\"}},[_c('el-form-item',[_c('el-popover',{attrs:{\"placement\":\"bottom\",\"popper-class\":\"auto-complete\",\"trigger\":\"focus\"}},[_c('ul',{on:{\"wheel\":function($event){$event.preventDefault();_vm.autoCompleteWheel($event)}}},_vm._l((_vm.autoCompleteValueArr),function(value,index){return _c('li',{key:index,attrs:{\"value\":value},on:{\"click\":function($event){$event.preventDefault();_vm.autoCompleteClick($event)}}},[_vm._v(\"\\n                \"+_vm._s(value)+\"\\n              \")])})),_vm._v(\" \"),_c('el-input',{attrs:{\"slot\":\"reference\",\"spellcheck\":\"false\",\"placeholder\":\"请输入内容\"},on:{\"focus\":function($event){_vm.autoCompleteFocus({\n                targetObj: 'searchForm',\n                targetKey: 'value',\n                sourceKey: _vm.searchForm.valueType\n              })}},slot:\"reference\",model:{value:(_vm.searchForm.value),callback:function ($$v) {_vm.$set(_vm.searchForm, \"value\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"searchForm.value\"}},[_c('el-select',{staticClass:\"my-select-type\",attrs:{\"slot\":\"prepend\",\"filterable\":\"\",\"placeholder\":\"请先选择搜索类型\"},on:{\"change\":_vm.changeKeyValue},slot:\"prepend\",model:{value:(_vm.searchForm.valueType),callback:function ($$v) {_vm.$set(_vm.searchForm, \"valueType\", $$v)},expression:\"searchForm.valueType\"}},_vm._l((_vm.searchForm.valueTypeArr),function(valueType){return _c('el-option',{key:valueType.value,attrs:{\"label\":valueType.label,\"value\":valueType.value}})})),_vm._v(\" \"),_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":function($event){$event.preventDefault();_vm.offlineSearch($event)}},slot:\"append\"})],1)],1)],1)],1)],1)],1),_vm._v(\" \"),_c('el-table',{attrs:{\"data\":_vm.datagridData,\"border\":\"\",\"stripe\":\"\",\"empty-text\":\" \",\"height\":_vm.tableHeight},on:{\"select\":_vm.selected,\"select-all\":_vm.selected}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"width\":\"19\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"19\"}}),_vm._v(\" \"),_vm._l((_vm.datagridConfig),function(item){return _c('el-table-column',{key:item.field,attrs:{\"prop\":item.field,\"label\":item.title,\"formatter\":_vm.tableFormat,\"sortable\":item.sortable,\"show-overflow-tooltip\":\"\",\"width\":item.width}})}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.editHandler(scope.$index, scope.row)}}},[_vm._v(\"\\n          编辑\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"danger\"},on:{\"click\":function($event){_vm.deleteHandler(scope.$index, scope.row)}}},[_vm._v(\"\\n          删除\\n        \")])]}}])})],2),_vm._v(\" \"),_c('div',{staticClass:\"dialogContain\"},[_c('el-dialog',{attrs:{\"title\":_vm.dialogTitle,\"center\":\"\",\"append-to-body\":\"\",\"close-on-click-modal\":false,\"close-on-press-escape\":false,\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:\"form\",attrs:{\"rules\":_vm.rules,\"model\":_vm.form,\"label-width\":\"140px\"}},[_vm._l((_vm.datagridConfig),function(item,index){return _c('el-form-item',{key:item.field,attrs:{\"label\":item.title,\"prop\":item.rule}},[(item.autoComplete)?_c('el-popover',{attrs:{\"placement\":\"bottom\",\"popper-class\":\"auto-complete\",\"visible-arrow\":\"\",\"trigger\":\"focus\"}},[_c('ul',{on:{\"wheel\":function($event){$event.preventDefault();_vm.autoCompleteWheel($event)}}},_vm._l((_vm.autoCompleteValueArr),function(value,index){return _c('li',{key:index,attrs:{\"value\":value},on:{\"click\":function($event){$event.preventDefault();_vm.autoCompleteClick($event)}}},[_vm._v(\"\\n                \"+_vm._s(value)+\"\\n              \")])})),_vm._v(\" \"),_c('el-input',{attrs:{\"slot\":\"reference\",\"placeholder\":item.placeholder,\"spellcheck\":\"false\"},on:{\"focus\":function($event){_vm.autoCompleteFocus({\n                targetObj: 'form',\n                targetKey: item.field,\n                sourceKey: item.field\n              })}},slot:\"reference\",model:{value:(_vm.form[item.field]),callback:function ($$v) {_vm.$set(_vm.form, item.field, $$v)},expression:\"form[item.field]\"}})],1):_c(item.componentTag,{tag:\"component\",attrs:{\"spellcheck\":\"false\",\"type\":item.type,\"placeholder\":item.placeholder},model:{value:(_vm.form[item.field]),callback:function ($$v) {_vm.$set(_vm.form, item.field, $$v)},expression:\"form[item.field]\"}})],1)}),_vm._v(\" \"),_c('el-form-item',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],attrs:{\"label\":\"表id\"}},[_c('el-input',{model:{value:(_vm.form.id),callback:function ($$v) {_vm.$set(_vm.form, \"id\", $$v)},expression:\"form.id\"}})],1)],2),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.saveRow}},[_vm._v(\"确 定\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){_vm.dialogFormVisible = false}}},[_vm._v(\"取 消\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"o50x\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_4_0_vue_loader_lib_selector_type_script_index_0_Table_vue__ = __webpack_require__(\"zsio\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_4_0_vue_loader_lib_template_compiler_index_id_data_v_30a98806_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_13_4_0_vue_loader_lib_selector_type_template_index_0_Table_vue__ = __webpack_require__(\"ixd3\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"xjCN\")\n}\nvar normalizeComponent = __webpack_require__(\"0HdQ\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-30a98806\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_4_0_vue_loader_lib_selector_type_script_index_0_Table_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_4_0_vue_loader_lib_template_compiler_index_id_data_v_30a98806_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_13_4_0_vue_loader_lib_selector_type_template_index_0_Table_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"xjCN\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"yil3\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"8bSs\")(\"2f47580a\", content, true);\n\n/***/ }),\n\n/***/ \"yil3\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"BkJT\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".edit-button[data-v-30a98806]{height:50px;overflow:auto}.inline-form[data-v-30a98806]{height:50px}\", \"\", {\"version\":3,\"sources\":[\"F:/demo/vueDemo/vue+vue-router+vuex+axios+element-ui+mock-demo/src/components/main/views/Table.vue\"],\"names\":[],\"mappings\":\"AACA,8BACE,YAAa,AACb,aAAe,CAChB,AAED,8BACE,WAAa,CACd\",\"file\":\"Table.vue\",\"sourcesContent\":[\"\\n.edit-button[data-v-30a98806] {\\n  height: 50px;\\n  overflow: auto;\\n}\\n/*行内表单的高度*/\\n.inline-form[data-v-30a98806] {\\n  height: 50px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"zsio\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__api_table__ = __webpack_require__(\"OVQD\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_js_validateRules__ = __webpack_require__(\"8ZxV\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_js_tableView_config__ = __webpack_require__(\"TqVl\");\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: function data() {\n    return {\n      datagridConfig: [], // 表格配置项\n      hasGetData: false, // 是否成功获取的数据，成功获取到数据后置为true\n      dialogFormVisible: false, // 是否展示表单\n      sourceData: [], // 请求得到的原始表格数据\n      // 搜索框需要的数据\n      searchForm: {\n        isSearch: false, // 是否执行搜索\n        valueType: 'orderNo',\n        valueTypeArr: [// 搜索类型的列表，对象数组\n        { value: 'orderNo', label: '订单号' }, { value: 'productName', label: '产品名称' }],\n        value: '', // 输入框的值\n        searchValue: '' // 实际执行搜索的值\n      },\n      selection: [], // 表格被选中数据（行）\n      editRow: {}, // 被修改的行\n      // 发送ajax请求的参数\n      requestParams: {\n        method: 'GET',\n        name: 'orderInfo', // 表格名，在页面的create阶段初始化，然后不再设置\n        params: { // 即将与请求一起发送的 URL 参数\n          ids: ''\n        },\n        data: {// 请求主体被发送的数据\n\n        }\n      },\n      dialogTitle: '新增信息', // 弹窗标题\n      // 表单\n      form: {\n        id: '' // id字段在表单中不显示，且config中没有，故手动添加占位\n      },\n      // 表单验证规则\n      rules: {},\n      // 自动完成数据，每一项类似：{orderNo: ['PO20170011']}\n      autoComplete: {\n        orderNo: [],\n        productName: []\n      },\n      autoCompleteConfig: {\n        sliceBegin: 0, // 数据截取开始的index\n        showLen: 5, // 截取的长度，也就是一次展示的数据个数\n        resultLen: -1 // 自动完成过滤后结果的个数，-1为未过滤\n      },\n      autoCompleteTarget: {\n        targetObj: '', // 目标输入框数据绑定的对象名\n        targetKey: '', // 目标输入框数据绑定的属性名\n        sourceKey: '' // 目标输入框数据绑定的属性名对应备选数据的属性名\n      },\n      // 需要格式化显示的字段\n      format: {\n        date: []\n      }\n    };\n  },\n\n  computed: {\n    // 经过处理得到的表格数据\n    datagridData: function datagridData() {\n      var searchForm = this.searchForm,\n          filterData = this.sourceData,\n          filterKey = searchForm.valueType,\n          filterValue = searchForm.searchValue;\n\n      if (searchForm.isSearch && filterValue !== '') {\n        // 如果数组元素的filterKey属性值与filterValue相同，则存入该元素\n        filterData = filterData.filter(function (item) {\n          return item[filterKey] == filterValue;\n        });\n\n        // 过滤之后将isSearch重置为空\n        this.searchForm.searchValue = '';\n        this.searchForm.isSearch = false;\n      }\n      return filterData;\n    },\n\n    // 根据目标输入框实时过滤备选列表\n    // 返回经过过滤的列表数据\n    autoCompleteValueArr: function autoCompleteValueArr() {\n      var data = this.autoComplete,\n          config = this.autoCompleteConfig,\n          target = this.autoCompleteTarget,\n          begin = config.sliceBegin,\n          end = begin + config.showLen,\n          tagValue,\n          result;\n\n      // 如果config已经被初始化了才开始过滤\n      if (target.targetObj && target.targetKey && target.sourceKey) {\n        tagValue = this[target.targetObj][target.targetKey];\n        result = data[target.sourceKey];\n      } else {\n        tagValue = '';\n        result = data.orderNo; // 给一个默认值\n      }\n\n      // value长度大于零进行过滤操作\n      // 如果数组值中包含该字符，则可以返回结果中\n      result = tagValue.length !== 0 ? result.filter(function (v) {\n        return (v + '').toLowerCase().indexOf(('' + tagValue).toLowerCase()) != -1;\n      }) : result;\n\n      // 由于弹框高度有限，故对结果进行截取\n      // 截取之前先返回结果数据的长度，方便进行滚动事件处理时的判断\n      this.autoCompleteConfig.resultLen = result.length;\n      return result.slice(begin, end);\n    },\n    // 表格高度动态计算\n    tableHeight: function tableHeight() {\n      return document.body.clientHeight || document.documentElement.clientHeight - 240;\n    }\n  },\n  methods: {\n    // 获得数据列表\n    // 然后执行setAutoList函数\n    getData: function getData() {\n      var _this = this;\n\n      // 首先设置请求参数\n      this.requestParams.method = 'get';\n\n      Object(__WEBPACK_IMPORTED_MODULE_0__api_table__[\"a\" /* crud */])(this.requestParams).then(function (res) {\n        // 后台数据正确返回后才对this.sourceData赋值\n\n        if (res && res.data && res.data.tableInfo) {\n          // var newArr = [0, this.sourceData.length].concat(res.data.tableInfo);\n          // this.sourceData.splice.apply(this.sourceData, newArr);\n          _this.sourceData = res.data.tableInfo;\n          _this.hasGetData = true;\n\n          // 在获取数据之后再设置自动完成需要的备选列表数据\n          _this.setAutoList();\n        } else {\n          console.log(\"后台返回数据有误！\");\n        }\n      }, function (error) {\n\n        _this.$alert('获取表格数据失败，请稍后重试或者联系管理员。', '错误', {\n          confirmButtonText: '确定',\n          callback: function callback(action) {\n            _this.$message({\n              type: 'info',\n              message: 'action: ' + action\n            });\n          }\n        });\n      });\n    },\n\n\n    // 下面是页内数据搜索部分功能函数（包含自动完成功能）\n\n    // 搜索类型的value改变时，更新搜索的valueType\n    // 清空目标输入框\n    // 同时设置自动完成的sourceKey\n    changeKeyValue: function changeKeyValue(value) {\n      // 更新搜索的valueType\n      // 搜索的类型为选中的选项的value\n      this.searchForm.valueType = value;\n      this.searchForm.value = '';\n      this.searchForm.searchValue = '';\n\n      // 同时设置自动完成的sourceKey\n      this.autoCompleteTarget.sourceKey = value;\n    },\n\n    // 点击搜索按钮，执行页内离线搜索\n    // 实际为设置isSearch标识位以及searchValue的值触发搜索\n    offlineSearch: function offlineSearch(e) {\n      this.searchForm.searchValue = this.searchForm.value;\n      this.searchForm.isSearch = true;\n    },\n\n\n    // 下面是自动完成输入框需要的函数\n\n    // 设置自动完成需要的备选列表数据\n    setAutoList: function setAutoList() {\n      var sourceData = this.sourceData,\n          config = this.datagridConfig,\n          obj = {};\n\n      for (var i = 0, len = sourceData.length; i < len; i++) {\n        for (var item in this.autoComplete) {\n          // debugger;\n          // 将未重复的结果存入this.autoComplete中\n          if (!obj[item]) {\n            obj[item] = {};\n          }\n          if (!obj[item][sourceData[i][item]]) {\n            obj[item][sourceData[i][item]] = true;\n            this.autoComplete[item].push(sourceData[i][item]);\n          }\n        }\n      }\n    },\n\n    // 绑定自动完成输入框的focus处理函数\n    // 将目标输入框的列表名和字段名保存在autoCompleteTarget\n    autoCompleteFocus: function autoCompleteFocus(obj) {\n      this.autoCompleteTarget.targetObj = obj.targetObj;\n      this.autoCompleteTarget.targetKey = obj.targetKey;\n      // 默认使用targetKey作为sourceKey\n      this.autoCompleteTarget.sourceKey = obj.sourceKey ? obj.sourceKey : obj.targetKey;\n    },\n\n    // 自动完成下拉列表鼠标滚动处理函数\n    // 更新列表数据截取的开始和结束位置\n    // 此处不做函数节流更符合使用场景\n    autoCompleteWheel: function autoCompleteWheel(e) {\n      // 向下滚动滚轮：e.deltaY为100\n      // 向上滚动滚轮：e.deltaY为-100\n      var config = this.autoCompleteConfig,\n          begin = config.sliceBegin,\n          end = begin + config.showLen,\n          len = config.resultLen;\n\n      if (e.deltaY > 0 && end < len) {\n        this.autoCompleteConfig.sliceBegin++;\n      } else if (e.deltaY < 0 && begin > 0) {\n        this.autoCompleteConfig.sliceBegin--;\n      }\n    },\n\n    // 自动完成下拉列表鼠标单击处理函数\n    // 将被点击列表的值填入根据autoCompleteTarget确定的输入框中\n    // 同时将列表数据截取的开始位置重置\n    autoCompleteClick: function autoCompleteClick(e) {\n      var value = e.srcElement.innerText,\n          targetObj = this.autoCompleteTarget.targetObj,\n          targetKey = this.autoCompleteTarget.targetKey;\n\n      this[targetObj][targetKey] = value;\n      this.autoCompleteConfig.sliceBegin = 0;\n    },\n\n\n    // 表格行被选择时的处理函数\n    // 将结果存入selection\n    selected: function selected(selection) {\n      this.selection = selection;\n    },\n\n\n    // 下面是按钮处理程序\n    // 新增行按钮\n    // 1、打开弹窗\n    // 2、设置ajax请求路径（即设置请求method）\n    addHandler: function addHandler() {\n      // 打开弹窗\n      this.dialogFormVisible = true;\n\n      // 设置axios的ajax请求parms的method为ADD\n      this.requestParams.method = 'add';\n    },\n\n    // 单个删除按钮\n    deleteHandler: function deleteHandler(index, row) {\n      var _this2 = this;\n\n      this.$confirm('此操作将永久删除该条数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        // 先设置请求参数\n        _this2.requestParams.method = 'delete';\n        _this2.requestParams.data = {\n          ids: row.id\n\n          // 向后台发起删除请求\n        };Object(__WEBPACK_IMPORTED_MODULE_0__api_table__[\"a\" /* crud */])(_this2.requestParams).then(function (res) {\n          // console.log('response', res);\n          // 后台返回成功\n          if (res.status >= 200 && res.status <= 300) {\n            var msg = res.data.msg,\n                _index = 0;\n\n            // 在页面上进行删除操作\n            _index = _this2.sourceData.indexOf(row);\n            _this2.sourceData.splice(_index, 1);\n\n            // 再次设置自动完成的备选列表\n            _this2.setAutoList();\n            // console.log(index);\n            _this2.$message({\n              type: 'success',\n              message: '第- ' + _index + ' -条数据删除成功！'\n            });\n          }\n        }, function (error) {\n          _this2.$message({\n            type: 'info',\n            message: '删除失败！'\n          });\n        });\n      }).catch(function () {\n        _this2.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n      // console.log( index, row);\n    },\n\n    // 批量删除按钮\n    batchDeleteHandler: function batchDeleteHandler() {\n      var _this3 = this;\n\n      var selections = this.selection,\n          len = selections.length,\n          selectIds = [],\n          ids = '';\n\n      for (var i = 0; i < len; i++) {\n        selectIds.push(selections[i].id);\n      }\n\n      // 根据后台要求对参数进行处理\n      ids = selectIds.join(',');\n      this.$confirm('您选中了- ' + len + ' -条数据！此操作将永久删除这些数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        // 先设置请求参数\n        _this3.requestParams.method = 'delete';\n        _this3.requestParams.data = {\n          ids: ids\n\n          // 向后台发起删除请求\n        };Object(__WEBPACK_IMPORTED_MODULE_0__api_table__[\"a\" /* crud */])(_this3.requestParams).then(function (res) {\n          // console.log('response', res);\n          // 后台返回成功\n          if (res.status >= 200 && res.status <= 300) {\n            var msg = res.data.msg,\n                index = 0;\n\n            // 在页面上进行删除操作\n            for (var _i = 0; _i < len; _i++) {\n              index = _this3.sourceData.indexOf(selections[_i]);\n              _this3.sourceData.splice(index, 1);\n            }\n\n            // 再次设置自动完成的备选列表\n            _this3.setAutoList();\n            // console.log(index);\n            _this3.$message({\n              type: 'success',\n              message: '共- ' + len + ' -条数据删除成功！'\n            });\n          }\n        }, function (error) {\n          _this3.$message({\n            type: 'info',\n            message: '删除失败！'\n          });\n        });\n      }).catch(function () {\n        _this3.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n\n    // 修改按钮\n    // 首先对弹窗填充对应行的值\n    // 打开弹窗\n    // 设置ajax请求路径（即设置请求method）\n    // 将被修改行存入this.editRow，方便操作成功后更新该数据\n    editHandler: function editHandler(index, row) {\n      // 对表单进行填值\n      // 迭代this.form而不是row\n      for (var item in this.form) {\n        this.form[item] = row[item];\n      }\n\n      // 打开表单弹窗\n      this.dialogFormVisible = true;\n\n      // 设置axios的ajax请求parms的method为EDIT\n      this.requestParams.method = 'edit';\n\n      // 将被修改行存入this.editRow，方便操作成功后更新该数据\n      this.editRow = row;\n    },\n\n    // 保存按钮\n    // 请求method在弹窗打开时已经设置\n    // 设置请求参数\n    saveRow: function saveRow() {\n      var _this4 = this;\n\n      this.$refs.form.validate(function (result) {\n        var newData = {};\n\n        if (result) {\n          // 直接将表单提交，axios默认将数据转化为json\n          _this4.requestParams.data = _this4.form;\n\n          // 发起添加请求\n          Object(__WEBPACK_IMPORTED_MODULE_0__api_table__[\"a\" /* crud */])(_this4.requestParams).then(function (res) {\n            // 后台返回成功\n            if (res.status >= 200 && res.status <= 300) {\n              var msg = res.data.msg,\n                  index = 0;\n\n              // 将结果存入新对象内\n              // 然后再插入this.sourceData中\n              // 防止后续修改对前面数据造成影响\n              for (var item in _this4.form) {\n                newData[item] = _this4.form[item];\n              }\n              // 如果是修改操作，则更新被操作数据\n              // 如果是增加操作，则增加该条数据\n              if (_this4.requestParams.method == 'edit') {\n                index = _this4.sourceData.indexOf(_this4.editRow);\n                _this4.sourceData.splice(index, 1, newData);\n              } else {\n                _this4.sourceData.splice(0, 0, newData);\n              }\n\n              // 再次设置自动完成的备选列表\n              _this4.setAutoList();\n              // console.log(index);\n              _this4.$message({\n                type: 'success',\n                message: msg + '数据保存成功！'\n              });\n\n              // 关闭弹窗\n              _this4.dialogFormVisible = false;\n            }\n          }, function (error) {\n            _this4.$message({\n              type: 'info',\n              message: '数据保存失败！'\n            });\n          });\n        } else {\n          _this4.$message({\n            type: 'info',\n            message: '数据验证失败，请检查数据！！'\n          });\n        }\n      });\n    },\n\n    // 重新加载按钮\n    reloadHandler: function reloadHandler() {\n      var _this5 = this;\n\n      this.$confirm('此操作将重新从后台请求数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n\n        // 确认重新加载后运行this.getData();\n        _this5.getData();\n      }).catch(function () {\n        _this5.$message({\n          type: 'info',\n          message: '已取消操作'\n        });\n      });\n    },\n\n    // 对列进行格式化\n    // 主要是对时间格式进行格式化显示\n    tableFormat: function tableFormat(row, column, cellValue) {\n      var string = '',\n          date = null;\n\n      if (this.format.date.indexOf(column.property) >= 0) {\n        // cellValue不为空、null、undefined时才进行格式化，\n        // 否则返回空字符串\n        if (cellValue) {\n          date = new Date(cellValue);\n          string = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n        } else {\n          string = '';\n        }\n        cellValue = string;\n      }\n\n      return cellValue;\n    }\n  },\n  // 0、设置请求参数中的请求表格名\n  // 1、获取页面表格配置文件\n  // 2、添加需要双向数据绑定的字段（表单字段以及自动完成输入框字段）\n  // 3、获取原始表格数据\n  // 4、加载表单验证规则\n  mounted: function mounted() {\n    var _this6 = this;\n\n    this.$nextTick(function () {\n      // Code that will run only after the\n      // entire view has been rendered\n\n      // 0、设置请求参数中的请求表格名\n      _this6.requestParams.name = _this6.$route.name;\n\n      // 1、获取页面表格配置文件\n      var config = __WEBPACK_IMPORTED_MODULE_2__common_js_tableView_config__[_this6.$route.name];\n      _this6.datagridConfig = config;\n\n      // 如果没有对应的config\n      // 则直接跳转到404页面\n      if (!config) {\n        _this6.$router.replace({ name: '404' });\n        return;\n      }\n      // 2、添加需要双向数据绑定的字段（表单字段以及自动完成输入框字段）\n      // 添加双向绑定的表单字段\n      // 同时添加双向绑定的自动完成字段\n      // 同时添加需要格式化的字段\n      for (var i = 0; i < config.length; i++) {\n\n        // 日期字段需要进行format，所以将这些字段存储起来\n        if (config[i].type.indexOf('date') >= 0) {\n          _this6.format.date.splice(0, 0, config[i].field);\n        }\n\n        _this6.$set(_this6.form, config[i].field, '');\n\n        // 如果需要添加自动完成，而且没有预设该字段，则使用this.$set添加该字段\n        if (config[i].autoComplete && !_this6.autoComplete[config[i].field]) {\n          _this6.$set(_this6.autoComplete, config[i].field, []);\n        }\n      }\n\n      // 3、获取原始表格数据\n      _this6.getData();\n\n      // 4、加载表单验证规则\n      _this6.rules = __WEBPACK_IMPORTED_MODULE_1__common_js_validateRules__[\"a\" /* rules */];\n    });\n  }\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.3d0ae65930ad35a1233f.js","/*\r\n* @Author: yang\r\n* @Date:   2017-10-17 21:54:01\r\n* @Last Modified by:   yang\r\n* @Last Modified time: 2017-11-04 11:16:03\r\n*/\r\n\r\n// 占个位，并没有实现\r\nexport const rules ={\r\n  name: [\r\n  ],\r\n  region: [\r\n    { required: true, message: '请选择活动区域', trigger: 'change' }\r\n  ],\r\n  date1: [\r\n    { type: 'date', required: true, message: '请选择日期', trigger: 'change' }\r\n  ],\r\n  date2: [\r\n    { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\r\n  ],\r\n  type: [\r\n    { type: 'array', required: true, message: '请至少选择一个活动性质', trigger: 'change' }\r\n  ],\r\n  resource: [\r\n    { required: true, message: '请选择活动资源', trigger: 'change' }\r\n  ],\r\n  desc: [\r\n    { required: true, message: '请填写活动形式', trigger: 'blur' }\r\n  ]\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/js/validateRules.js","/*\r\n* @Author: yang\r\n* @Date:   2017-10-12 17:37:16\r\n* @Last Modified by:   yang\r\n* @Last Modified time: 2017-11-04 11:21:03\r\n*/\r\n\r\n// 全局请求拦截器在main.js中配置\r\nimport axios from 'axios';\r\n\r\n/* 数据增删改查模块\r\n * requestParams：调用dao的请求参数\r\n * requestParams = {\r\n *    method: '', // 请求操作类型\r\n *    params: {} // 请求附带参数\r\n * }\r\n */\r\n\r\n// 请求路径-表名映射\r\nconst baseURL = {\r\n  ORDERINFO: '../../orderInfo',\r\n  ORDERSCHEDULE: '../../orderSchedule'\r\n}\r\nexport const crud = function(requestParams) {\r\n\r\n  var tableName = requestParams.name.toUpperCase(),\r\n      base = baseURL[tableName], // 根据请求的表名取出对应请求路径\r\n      myPromise = null; // 返回的Promise 对象\r\n\r\n  switch(requestParams.method.toUpperCase()) {\r\n    // 获取整个表格数据\r\n    case 'GET':\r\n      myPromise = axios.get(`${base}/list.do`);\r\n      break;\r\n    // 新增数据\r\n    case 'ADD':\r\n      myPromise = axios.post(`${base}/insert.do`, { data: requestParams.data });\r\n      break;\r\n    // 删除数据\r\n    // params: {ids: ids}\r\n    // ids为用逗号分隔开每个id的字符串\r\n    case 'DELETE':\r\n      myPromise = axios.post(`${base}/deleteBatch.do`, { data: requestParams.data });\r\n      break;\r\n    // 修改数据\r\n    case 'EDIT':\r\n      myPromise = axios.post(`${base}/update.do`, { data: requestParams.data });\r\n      break;\r\n    // 查找数据，目前使用离线搜索，故不需要这个功能\r\n    // case 'QUERY':\r\n    //   myPromise = axios.post(`${base}/list.do`, { params: requestParams.params });\r\n    //   break;\r\n    // 都不匹配则同样返回rejected状态\r\n    default:\r\n      // 使用error进行堆栈跟踪\r\n      myPromise = Promise.reject(new Error(\"请求参数有误\")).then(null,\r\n                    function(error) {console.log(error);});\r\n  }\r\n\r\n  return myPromise;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/table.js","/*\r\n* @Author: yang\r\n* @Date:   2017-10-16 20:17:50\r\n* @Last Modified by:   yang\r\n* @Last Modified time: 2017-10-31 13:57:44\r\n*/\r\n// 订单信息表\r\nexport const orderInfo= [\r\n  {autoComplete: true, sortable: true, field: \"orderNo\", title: \"订单号\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: true, sortable: true, field: \"productName\", title: \"产品名称\", width: 120, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: false, sortable: true, field: \"orderAmount\", title: \"订单数量\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: false, sortable: true, field: \"stockAmount\", title: \"库存\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: false, sortable: true, field: \"spareParts\", title: \"备品\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: false, sortable: true, field: \"planAmount\", title: \"需生产数\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: false, sortable: true, field: \"orderDate\", title: \"下单日期\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date'},\r\n  {autoComplete: false, sortable: true, field: \"requiredDate\", title: \"要求交货日期\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date'},\r\n  {autoComplete: false, sortable: true, field: \"replyDate\", title: \"交期\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date'},\r\n  {autoComplete: false, sortable: true, field: \"purchaseRequirement\", title: \"特别要求\", width: 180, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: 'textarea'},\r\n  {autoComplete: true, sortable: true, field: \"materialCoding\", title: \"物料长代码\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: true, sortable: true, field: \"materialModel\", title: \"规格型号\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: true, sortable: true, field: \"orderStatus\", title: \"生产状态\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: true, sortable: true, field: \"remark\", title: \"备注\", width: 140, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: 'textarea'},\r\n  {autoComplete: true, sortable: true, field: \"exceptionReason\", title: \"异常原因\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: true, sortable: true, field: \"orderType\", title: \"订单类型\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: false, sortable: true, field: \"price\", title: \"单价\", width: 80, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''}\r\n];\r\n\r\n// 订单进度表\r\nexport const orderSchedule= [\r\n  {autoComplete: true, sortable: true, field: \"orderNo\", title: \"订单号\", width: 100, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: true, sortable: true, field: \"productName\", title: \"产品名称\", width: 120, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: false, sortable: true, field: \"batch\", title: \"批次\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: false, sortable: true, field: \"reciverOrder\", title: \"下单日期\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date'},\r\n  {autoComplete: false, sortable: true, field: \"planProductTime\", title: \"计划生产开始时间\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date'},\r\n  {autoComplete: false, sortable: true, field: \"productStatus\", title: \"生产开始状态\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: false, sortable: true, field: \"planProductFinish\", title: \"计划生产完成时间\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date'},\r\n  {autoComplete: false, sortable: true, field: \"productFinishStatus\", title: \"生产完成状态\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''},\r\n  {autoComplete: false, sortable: true, field: \"planOrderFinish\", title: \"订单计划完成时间\", width: 100, componentTag: 'el-date-picker', rule: 'name', placeholder: '请输入', type: 'date'},\r\n  {autoComplete: false, sortable: true, field: \"orderFinishStatus\", title: \"订单完成状态\", width: 60, componentTag: 'el-input', rule: 'name', placeholder: '请输入', type: ''}\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/js/tableView.config.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hasGetData),expression:\"hasGetData\"}],staticClass:\"table my-datagrid\"},[_c('el-row',{staticClass:\"edit-button\"},[_c('el-col',{attrs:{\"span\":12}},[_c('div',{staticClass:\"grid-content\"},[_c('el-button',{attrs:{\"size\":\"medium\",\"type\":\"primary\",\"icon\":\"el-icon-plus\",\"round\":\"\"},on:{\"click\":_vm.addHandler}},[_vm._v(\"\\n          新增一行\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"medium\",\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"round\":\"\"},on:{\"click\":_vm.batchDeleteHandler}},[_vm._v(\"\\n          批量删除\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"medium\",\"type\":\"warning\",\"round\":\"\"},on:{\"click\":_vm.reloadHandler}},[_vm._v(\"\\n          重新加载\\n        \")])],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12,\"offset\":0}},[_c('el-form',{ref:\"searchForm\",staticClass:\"inline-form\",attrs:{\"inline\":\"\"}},[_c('el-form-item',[_c('el-popover',{attrs:{\"placement\":\"bottom\",\"popper-class\":\"auto-complete\",\"trigger\":\"focus\"}},[_c('ul',{on:{\"wheel\":function($event){$event.preventDefault();_vm.autoCompleteWheel($event)}}},_vm._l((_vm.autoCompleteValueArr),function(value,index){return _c('li',{key:index,attrs:{\"value\":value},on:{\"click\":function($event){$event.preventDefault();_vm.autoCompleteClick($event)}}},[_vm._v(\"\\n                \"+_vm._s(value)+\"\\n              \")])})),_vm._v(\" \"),_c('el-input',{attrs:{\"slot\":\"reference\",\"spellcheck\":\"false\",\"placeholder\":\"请输入内容\"},on:{\"focus\":function($event){_vm.autoCompleteFocus({\n                targetObj: 'searchForm',\n                targetKey: 'value',\n                sourceKey: _vm.searchForm.valueType\n              })}},slot:\"reference\",model:{value:(_vm.searchForm.value),callback:function ($$v) {_vm.$set(_vm.searchForm, \"value\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"searchForm.value\"}},[_c('el-select',{staticClass:\"my-select-type\",attrs:{\"slot\":\"prepend\",\"filterable\":\"\",\"placeholder\":\"请先选择搜索类型\"},on:{\"change\":_vm.changeKeyValue},slot:\"prepend\",model:{value:(_vm.searchForm.valueType),callback:function ($$v) {_vm.$set(_vm.searchForm, \"valueType\", $$v)},expression:\"searchForm.valueType\"}},_vm._l((_vm.searchForm.valueTypeArr),function(valueType){return _c('el-option',{key:valueType.value,attrs:{\"label\":valueType.label,\"value\":valueType.value}})})),_vm._v(\" \"),_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":function($event){$event.preventDefault();_vm.offlineSearch($event)}},slot:\"append\"})],1)],1)],1)],1)],1)],1),_vm._v(\" \"),_c('el-table',{attrs:{\"data\":_vm.datagridData,\"border\":\"\",\"stripe\":\"\",\"empty-text\":\" \",\"height\":_vm.tableHeight},on:{\"select\":_vm.selected,\"select-all\":_vm.selected}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"width\":\"19\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"19\"}}),_vm._v(\" \"),_vm._l((_vm.datagridConfig),function(item){return _c('el-table-column',{key:item.field,attrs:{\"prop\":item.field,\"label\":item.title,\"formatter\":_vm.tableFormat,\"sortable\":item.sortable,\"show-overflow-tooltip\":\"\",\"width\":item.width}})}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"200\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.editHandler(scope.$index, scope.row)}}},[_vm._v(\"\\n          编辑\\n        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"danger\"},on:{\"click\":function($event){_vm.deleteHandler(scope.$index, scope.row)}}},[_vm._v(\"\\n          删除\\n        \")])]}}])})],2),_vm._v(\" \"),_c('div',{staticClass:\"dialogContain\"},[_c('el-dialog',{attrs:{\"title\":_vm.dialogTitle,\"center\":\"\",\"append-to-body\":\"\",\"close-on-click-modal\":false,\"close-on-press-escape\":false,\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:\"form\",attrs:{\"rules\":_vm.rules,\"model\":_vm.form,\"label-width\":\"140px\"}},[_vm._l((_vm.datagridConfig),function(item,index){return _c('el-form-item',{key:item.field,attrs:{\"label\":item.title,\"prop\":item.rule}},[(item.autoComplete)?_c('el-popover',{attrs:{\"placement\":\"bottom\",\"popper-class\":\"auto-complete\",\"visible-arrow\":\"\",\"trigger\":\"focus\"}},[_c('ul',{on:{\"wheel\":function($event){$event.preventDefault();_vm.autoCompleteWheel($event)}}},_vm._l((_vm.autoCompleteValueArr),function(value,index){return _c('li',{key:index,attrs:{\"value\":value},on:{\"click\":function($event){$event.preventDefault();_vm.autoCompleteClick($event)}}},[_vm._v(\"\\n                \"+_vm._s(value)+\"\\n              \")])})),_vm._v(\" \"),_c('el-input',{attrs:{\"slot\":\"reference\",\"placeholder\":item.placeholder,\"spellcheck\":\"false\"},on:{\"focus\":function($event){_vm.autoCompleteFocus({\n                targetObj: 'form',\n                targetKey: item.field,\n                sourceKey: item.field\n              })}},slot:\"reference\",model:{value:(_vm.form[item.field]),callback:function ($$v) {_vm.$set(_vm.form, item.field, $$v)},expression:\"form[item.field]\"}})],1):_c(item.componentTag,{tag:\"component\",attrs:{\"spellcheck\":\"false\",\"type\":item.type,\"placeholder\":item.placeholder},model:{value:(_vm.form[item.field]),callback:function ($$v) {_vm.$set(_vm.form, item.field, $$v)},expression:\"form[item.field]\"}})],1)}),_vm._v(\" \"),_c('el-form-item',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],attrs:{\"label\":\"表id\"}},[_c('el-input',{model:{value:(_vm.form.id),callback:function ($$v) {_vm.$set(_vm.form, \"id\", $$v)},expression:\"form.id\"}})],1)],2),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.saveRow}},[_vm._v(\"确 定\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){_vm.dialogFormVisible = false}}},[_vm._v(\"取 消\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.4.0@vue-loader/lib/template-compiler?{\"id\":\"data-v-30a98806\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.4.0@vue-loader/lib/selector.js?type=template&index=0!./src/components/main/views/Table.vue\n// module id = ixd3\n// module chunks = 1","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.4.0@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-30a98806\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_vue-loader@13.4.0@vue-loader/lib/selector?type=styles&index=0!./Table.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.4.0@vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.4.0@vue-loader/lib/selector?type=script&index=0!./Table.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.4.0@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-30a98806\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.4.0@vue-loader/lib/selector?type=template&index=0!./Table.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-30a98806\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/main/views/Table.vue\n// module id = o50x\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/_css-loader@0.28.7@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.4.0@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-30a98806\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/_vue-loader@13.4.0@vue-loader/lib/selector.js?type=styles&index=0!./Table.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/_vue-style-loader@3.0.3@vue-style-loader/lib/addStylesClient.js\")(\"2f47580a\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/_vue-style-loader@3.0.3@vue-style-loader!./node_modules/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/_vue-loader@13.4.0@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-30a98806\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/_vue-loader@13.4.0@vue-loader/lib/selector.js?type=styles&index=0!./src/components/main/views/Table.vue\n// module id = xjCN\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/_css-loader@0.28.7@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".edit-button[data-v-30a98806]{height:50px;overflow:auto}.inline-form[data-v-30a98806]{height:50px}\", \"\", {\"version\":3,\"sources\":[\"F:/demo/vueDemo/vue+vue-router+vuex+axios+element-ui+mock-demo/src/components/main/views/Table.vue\"],\"names\":[],\"mappings\":\"AACA,8BACE,YAAa,AACb,aAAe,CAChB,AAED,8BACE,WAAa,CACd\",\"file\":\"Table.vue\",\"sourcesContent\":[\"\\n.edit-button[data-v-30a98806] {\\n  height: 50px;\\n  overflow: auto;\\n}\\n/*行内表单的高度*/\\n.inline-form[data-v-30a98806] {\\n  height: 50px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_css-loader@0.28.7@css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/_vue-loader@13.4.0@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-30a98806\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/_vue-loader@13.4.0@vue-loader/lib/selector.js?type=styles&index=0!./src/components/main/views/Table.vue\n// module id = yil3\n// module chunks = 1","<template>\r\n  <div class=\"table my-datagrid\"  v-show=\"hasGetData\">\r\n\r\n    <!-- 表格操作按钮及搜索输入框 -->\r\n    <el-row class=\"edit-button\">\r\n      <el-col :span=\"12\">\r\n        <div class=\"grid-content\">\r\n          <el-button\r\n            size=\"medium\"\r\n            type=\"primary\"\r\n            @click=\"addHandler\"\r\n            icon=\"el-icon-plus\"\r\n            round>\r\n            新增一行\r\n          </el-button>\r\n          <el-button\r\n            size=\"medium\"\r\n            type=\"danger\"\r\n            @click=\"batchDeleteHandler\"\r\n            icon=\"el-icon-delete\"\r\n            round>\r\n            批量删除\r\n          </el-button>\r\n          <el-button\r\n            size=\"medium\"\r\n            @click=\"reloadHandler\"\r\n            type=\"warning\"\r\n            round>\r\n            重新加载\r\n          </el-button>\r\n        </div>\r\n      </el-col>\r\n      <!-- 搜索复合输入框应用自动完成有bug，故利用popover手动实现自动完成 -->\r\n      <el-col :span=\"12\" :offset=\"0\">\r\n        <!-- inline-form为本组件样式 -->\r\n        <el-form\r\n          ref=\"searchForm\"\r\n          class=\"inline-form\"\r\n          inline>\r\n          <el-form-item>\r\n            <!-- auto-complete为全局样式 -->\r\n            <el-popover\r\n              placement=\"bottom\"\r\n              popper-class=\"auto-complete\"\r\n              trigger=\"focus\">\r\n              <ul @wheel.prevent=\"autoCompleteWheel\">\r\n                <li\r\n                  v-for=\"(value, index) in autoCompleteValueArr\"\r\n                  :value=\"value\"\r\n                  @click.prevent=\"autoCompleteClick\"\r\n                  :key=\"index\">\r\n                  {{value}}\r\n                </li>\r\n              </ul>\r\n              <!-- autoCompleteFocus传入的对象用于确定目标绑定的数据 -->\r\n              <el-input\r\n                slot=\"reference\"\r\n                spellcheck=\"false\"\r\n                @focus=\"autoCompleteFocus({\r\n                  targetObj: 'searchForm',\r\n                  targetKey: 'value',\r\n                  sourceKey: searchForm.valueType\r\n                })\"\r\n                v-model.trim=\"searchForm.value\"\r\n                placeholder=\"请输入内容\">\r\n                <el-select\r\n                  v-model=\"searchForm.valueType\"\r\n                  class=\"my-select-type\"\r\n                  slot=\"prepend\"\r\n                  filterable\r\n                  @change=\"changeKeyValue\"\r\n                  placeholder=\"请先选择搜索类型\">\r\n                  <el-option\r\n                    v-for=\"valueType in searchForm.valueTypeArr\"\r\n                    :key=\"valueType.value\"\r\n                    :label=\"valueType.label\"\r\n                    :value=\"valueType.value\">\r\n                  </el-option>\r\n                </el-select>\r\n                    <el-button\r\n                  slot=\"append\"\r\n                  @click.prevent=\"offlineSearch\"\r\n                  icon=\"el-icon-search\">\r\n                </el-button>\r\n              </el-input>\r\n            </el-popover>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 数据表格 -->\r\n    <el-table\r\n      :data=\"datagridData\"\r\n      border\r\n      stripe\r\n      @select=\"selected\"\r\n      @select-all=\"selected\"\r\n      empty-text=\" \"\r\n      :height=\"tableHeight\">\r\n      <el-table-column\r\n        type=\"index\"\r\n        width=\"19\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        type=\"selection\"\r\n        width=\"19\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        v-for=\"item in datagridConfig\"\r\n        :prop=\"item.field\"\r\n        :key=\"item.field\"\r\n        :label=\"item.title\"\r\n        :formatter=\"tableFormat\"\r\n        :sortable=\"item.sortable\"\r\n        show-overflow-tooltip\r\n        :width=\"item.width\">\r\n      </el-table-column>\r\n      <!-- 表id字段不渲染 -->\r\n\r\n      <!-- 操作按钮 -->\r\n      <el-table-column\r\n        fixed=\"right\"\r\n        label=\"操作\"\r\n        width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"small\"\r\n            @click=\"editHandler(scope.$index, scope.row)\">\r\n            编辑\r\n          </el-button>\r\n          <el-button\r\n            size=\"small\"\r\n            type=\"danger\"\r\n            @click=\"deleteHandler(scope.$index, scope.row)\">\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 表单弹窗 -->\r\n    <div class=\"dialogContain\">\r\n      <el-dialog\r\n        :title=\"dialogTitle\"\r\n        center\r\n        append-to-body\r\n        :close-on-click-modal=\"false\"\r\n        :close-on-press-escape=\"false\"\r\n        :visible.sync=\"dialogFormVisible\">\r\n        <el-form\r\n          ref=\"form\"\r\n          :rules=\"rules\"\r\n          :model=\"form\"\r\n          label-width=\"140px\">\r\n          <el-form-item\r\n            v-for=\"(item, index) in datagridConfig\"\r\n            :key=\"item.field\"\r\n            :label=\"item.title\"\r\n            :prop=\"item.rule\">\r\n\r\n            <!-- auto-complete为全局样式 -->\r\n            <el-popover\r\n              v-if=\"item.autoComplete\"\r\n              placement=\"bottom\"\r\n              popper-class=\"auto-complete\"\r\n              visible-arrow\r\n              trigger=\"focus\">\r\n              <ul @wheel.prevent=\"autoCompleteWheel\">\r\n                <li\r\n                  v-for=\"(value, index) in autoCompleteValueArr\"\r\n                  :value=\"value\"\r\n                  @click.prevent=\"autoCompleteClick\"\r\n                  :key=\"index\">\r\n                  {{value}}\r\n                </li>\r\n              </ul>\r\n              <el-input\r\n                :placeholder=\"item.placeholder\"\r\n                spellcheck=\"false\"\r\n                @focus=\"autoCompleteFocus({\r\n                  targetObj: 'form',\r\n                  targetKey: item.field,\r\n                  sourceKey: item.field\r\n                })\"\r\n                slot=\"reference\"\r\n                v-model=\"form[item.field]\">\r\n              </el-input>\r\n            </el-popover>\r\n\r\n            <component\r\n              v-else\r\n              :is=\"item.componentTag\"\r\n              spellcheck=\"false\"\r\n              :type=\"item.type\"\r\n              v-model=\"form[item.field]\"\r\n              :placeholder=\"item.placeholder\">\r\n            </component>\r\n          </el-form-item>\r\n          <!-- id字段不显示 -->\r\n          <el-form-item v-show=\"false\" label=\"表id\">\r\n            <el-input v-model=\"form.id\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <!-- 按钮 -->\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button type=\"primary\" @click=\"saveRow\">确 定</el-button>\r\n          <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { crud } from '@/api/table'\r\nimport { rules } from '@/common/js/validateRules'\r\nimport * as tableViewConfig from '@/common/js/tableView.config'\r\n\r\nexport default {\r\n  data () {\r\n      return {\r\n        datagridConfig: [], // 表格配置项\r\n        hasGetData: false, // 是否成功获取的数据，成功获取到数据后置为true\r\n        dialogFormVisible: false, // 是否展示表单\r\n        sourceData: [], // 请求得到的原始表格数据\r\n        // 搜索框需要的数据\r\n        searchForm: {\r\n          isSearch: false, // 是否执行搜索\r\n          valueType: 'orderNo',\r\n          valueTypeArr: [  // 搜索类型的列表，对象数组\r\n            {value: 'orderNo', label: '订单号'},\r\n            {value: 'productName', label: '产品名称'},\r\n          ],\r\n          value: '', // 输入框的值\r\n          searchValue: '' // 实际执行搜索的值\r\n        },\r\n        selection: [], // 表格被选中数据（行）\r\n        editRow: {}, // 被修改的行\r\n        // 发送ajax请求的参数\r\n        requestParams: {\r\n          method: 'GET',\r\n          name: 'orderInfo', // 表格名，在页面的create阶段初始化，然后不再设置\r\n          params: { // 即将与请求一起发送的 URL 参数\r\n            ids: ''\r\n          },\r\n          data: { // 请求主体被发送的数据\r\n\r\n          }\r\n        },\r\n        dialogTitle: '新增信息', // 弹窗标题\r\n        // 表单\r\n        form: {\r\n          id: '' // id字段在表单中不显示，且config中没有，故手动添加占位\r\n        },\r\n        // 表单验证规则\r\n        rules: {\r\n        },\r\n        // 自动完成数据，每一项类似：{orderNo: ['PO20170011']}\r\n        autoComplete: {\r\n          orderNo: [],\r\n          productName: []\r\n        },\r\n        autoCompleteConfig: {\r\n          sliceBegin: 0, // 数据截取开始的index\r\n          showLen: 5, // 截取的长度，也就是一次展示的数据个数\r\n          resultLen: -1 // 自动完成过滤后结果的个数，-1为未过滤\r\n        },\r\n        autoCompleteTarget: {\r\n          targetObj: '', // 目标输入框数据绑定的对象名\r\n          targetKey: '', // 目标输入框数据绑定的属性名\r\n          sourceKey: '' // 目标输入框数据绑定的属性名对应备选数据的属性名\r\n        },\r\n        // 需要格式化显示的字段\r\n        format: {\r\n          date: []\r\n        }\r\n      }\r\n  },\r\n  computed: {\r\n    // 经过处理得到的表格数据\r\n    datagridData() {\r\n      var searchForm = this.searchForm,\r\n          filterData = this.sourceData,\r\n          filterKey = searchForm.valueType,\r\n          filterValue = searchForm.searchValue;\r\n\r\n      if (searchForm.isSearch && filterValue !== '') {\r\n        // 如果数组元素的filterKey属性值与filterValue相同，则存入该元素\r\n        filterData = filterData.filter(item => item[filterKey] == filterValue);\r\n\r\n        // 过滤之后将isSearch重置为空\r\n        this.searchForm.searchValue = '';\r\n        this.searchForm.isSearch = false;\r\n      }\r\n      return filterData;\r\n    },\r\n    // 根据目标输入框实时过滤备选列表\r\n    // 返回经过过滤的列表数据\r\n    autoCompleteValueArr: function() {\r\n      var data = this.autoComplete,\r\n          config = this.autoCompleteConfig,\r\n          target = this.autoCompleteTarget,\r\n          begin = config.sliceBegin,\r\n          end = begin + config.showLen,\r\n          tagValue, result;\r\n\r\n      // 如果config已经被初始化了才开始过滤\r\n      if (target.targetObj && target.targetKey && target.sourceKey) {\r\n        tagValue = this[target.targetObj][target.targetKey];\r\n        result = data[target.sourceKey];\r\n      } else {\r\n        tagValue = '';\r\n        result = data.orderNo;  // 给一个默认值\r\n      }\r\n\r\n      // value长度大于零进行过滤操作\r\n      // 如果数组值中包含该字符，则可以返回结果中\r\n      result = tagValue.length !== 0 ?\r\n        result.filter(v => (v + '').toLowerCase().indexOf(('' + tagValue).toLowerCase()) != -1) :\r\n        result;\r\n\r\n      // 由于弹框高度有限，故对结果进行截取\r\n      // 截取之前先返回结果数据的长度，方便进行滚动事件处理时的判断\r\n      this.autoCompleteConfig.resultLen = result.length;\r\n      return result.slice(begin, end);\r\n    },\r\n    // 表格高度动态计算\r\n    tableHeight() {\r\n      return document.body.clientHeight || document.documentElement.clientHeight - 240;\r\n    }\r\n  },\r\n  methods: {\r\n    // 获得数据列表\r\n    // 然后执行setAutoList函数\r\n    getData() {\r\n      // 首先设置请求参数\r\n      this.requestParams.method = 'get';\r\n\r\n      crud(this.requestParams).then((res) => {\r\n        // 后台数据正确返回后才对this.sourceData赋值\r\n\r\n        if (res && res.data && res.data.tableInfo) {\r\n          // var newArr = [0, this.sourceData.length].concat(res.data.tableInfo);\r\n          // this.sourceData.splice.apply(this.sourceData, newArr);\r\n          this.sourceData = res.data.tableInfo;\r\n          this.hasGetData = true;\r\n\r\n          // 在获取数据之后再设置自动完成需要的备选列表数据\r\n          this.setAutoList();\r\n        } else {\r\n          console.log(\"后台返回数据有误！\");\r\n        }\r\n      }, (error) => {\r\n\r\n        this.$alert('获取表格数据失败，请稍后重试或者联系管理员。', '错误', {\r\n          confirmButtonText: '确定',\r\n          callback: action => {\r\n            this.$message({\r\n              type: 'info',\r\n              message: `action: ${ action }`\r\n            });\r\n          }\r\n        });\r\n      });\r\n    },\r\n\r\n    // 下面是页内数据搜索部分功能函数（包含自动完成功能）\r\n\r\n    // 搜索类型的value改变时，更新搜索的valueType\r\n    // 清空目标输入框\r\n    // 同时设置自动完成的sourceKey\r\n    changeKeyValue(value) {\r\n      // 更新搜索的valueType\r\n      // 搜索的类型为选中的选项的value\r\n      this.searchForm.valueType = value;\r\n      this.searchForm.value = '';\r\n      this.searchForm.searchValue = '';\r\n\r\n      // 同时设置自动完成的sourceKey\r\n      this.autoCompleteTarget.sourceKey = value;\r\n    },\r\n    // 点击搜索按钮，执行页内离线搜索\r\n    // 实际为设置isSearch标识位以及searchValue的值触发搜索\r\n    offlineSearch(e) {\r\n      this.searchForm.searchValue = this.searchForm.value;\r\n      this.searchForm.isSearch = true;\r\n    },\r\n\r\n    // 下面是自动完成输入框需要的函数\r\n\r\n    // 设置自动完成需要的备选列表数据\r\n    setAutoList() {\r\n      var sourceData = this.sourceData,\r\n          config = this.datagridConfig,\r\n          obj = {};\r\n\r\n      for (let i = 0, len = sourceData.length; i < len; i++) {\r\n        for (let item in this.autoComplete) {\r\n          // debugger;\r\n          // 将未重复的结果存入this.autoComplete中\r\n          if(!obj[item]) {\r\n            obj[item] = {};\r\n          }\r\n          if(!obj[item][sourceData[i][item]]) {\r\n            obj[item][sourceData[i][item]] = true;\r\n            this.autoComplete[item].push(sourceData[i][item]);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 绑定自动完成输入框的focus处理函数\r\n    // 将目标输入框的列表名和字段名保存在autoCompleteTarget\r\n    autoCompleteFocus(obj) {\r\n      this.autoCompleteTarget.targetObj = obj.targetObj;\r\n      this.autoCompleteTarget.targetKey = obj.targetKey;\r\n      // 默认使用targetKey作为sourceKey\r\n      this.autoCompleteTarget.sourceKey = obj.sourceKey ?\r\n                                          obj.sourceKey : obj.targetKey;\r\n    },\r\n    // 自动完成下拉列表鼠标滚动处理函数\r\n    // 更新列表数据截取的开始和结束位置\r\n    // 此处不做函数节流更符合使用场景\r\n    autoCompleteWheel(e) {\r\n      // 向下滚动滚轮：e.deltaY为100\r\n      // 向上滚动滚轮：e.deltaY为-100\r\n      var config = this.autoCompleteConfig,\r\n          begin = config.sliceBegin,\r\n          end = begin + config.showLen,\r\n          len = config.resultLen;\r\n\r\n      if (e.deltaY > 0 && end < len) {\r\n        this.autoCompleteConfig.sliceBegin++;\r\n      } else if(e.deltaY < 0 && begin > 0) {\r\n        this.autoCompleteConfig.sliceBegin--;\r\n      }\r\n    },\r\n    // 自动完成下拉列表鼠标单击处理函数\r\n    // 将被点击列表的值填入根据autoCompleteTarget确定的输入框中\r\n    // 同时将列表数据截取的开始位置重置\r\n    autoCompleteClick(e) {\r\n      var value = e.srcElement.innerText,\r\n          targetObj = this.autoCompleteTarget.targetObj,\r\n          targetKey = this.autoCompleteTarget.targetKey;\r\n\r\n      this[targetObj][targetKey] = value;\r\n      this.autoCompleteConfig.sliceBegin = 0;\r\n    },\r\n\r\n\r\n    // 表格行被选择时的处理函数\r\n    // 将结果存入selection\r\n    selected(selection) {\r\n      this.selection = selection;\r\n    },\r\n\r\n    // 下面是按钮处理程序\r\n    // 新增行按钮\r\n    // 1、打开弹窗\r\n    // 2、设置ajax请求路径（即设置请求method）\r\n    addHandler() {\r\n      // 打开弹窗\r\n      this.dialogFormVisible = true;\r\n\r\n      // 设置axios的ajax请求parms的method为ADD\r\n      this.requestParams.method = 'add';\r\n    },\r\n    // 单个删除按钮\r\n    deleteHandler(index, row) {\r\n      this.$confirm('此操作将永久删除该条数据, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        // 先设置请求参数\r\n        this.requestParams.method = 'delete';\r\n        this.requestParams.data = {\r\n          ids: row.id\r\n        }\r\n\r\n        // 向后台发起删除请求\r\n        crud(this.requestParams).then(res => {\r\n          // console.log('response', res);\r\n          // 后台返回成功\r\n          if (res.status >= 200 && res.status <= 300) {\r\n            let msg = res.data.msg,\r\n                index = 0;\r\n\r\n            // 在页面上进行删除操作\r\n            index = this.sourceData.indexOf(row);\r\n            this.sourceData.splice(index, 1);\r\n\r\n            // 再次设置自动完成的备选列表\r\n            this.setAutoList();\r\n            // console.log(index);\r\n            this.$message({\r\n              type: 'success',\r\n              message: '第- ' + index + ' -条数据删除成功！'\r\n            });\r\n          }\r\n        }, error => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '删除失败！'\r\n          });\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });\r\n      });\r\n      // console.log( index, row);\r\n    },\r\n    // 批量删除按钮\r\n    batchDeleteHandler() {\r\n      var selections = this.selection,\r\n          len = selections.length,\r\n          selectIds = [],\r\n          ids = '';\r\n\r\n      for (let i = 0; i < len; i++) {\r\n        selectIds.push(selections[i].id);\r\n      }\r\n\r\n      // 根据后台要求对参数进行处理\r\n      ids = selectIds.join(',');\r\n      this.$confirm('您选中了- ' + len + ' -条数据！此操作将永久删除这些数据, 是否继续?',\r\n                      '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        // 先设置请求参数\r\n        this.requestParams.method = 'delete';\r\n        this.requestParams.data = {\r\n          ids: ids\r\n        }\r\n\r\n        // 向后台发起删除请求\r\n        crud(this.requestParams).then(res => {\r\n          // console.log('response', res);\r\n          // 后台返回成功\r\n          if (res.status >= 200 && res.status <= 300) {\r\n            let msg = res.data.msg,\r\n                index = 0;\r\n\r\n            // 在页面上进行删除操作\r\n            for (let i = 0; i < len; i++) {\r\n              index = this.sourceData.indexOf(selections[i]);\r\n              this.sourceData.splice(index, 1);\r\n            }\r\n\r\n            // 再次设置自动完成的备选列表\r\n            this.setAutoList();\r\n            // console.log(index);\r\n            this.$message({\r\n              type: 'success',\r\n              message: '共- ' + len + ' -条数据删除成功！'\r\n            });\r\n          }\r\n        }, error => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '删除失败！'\r\n          });\r\n        });\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });\r\n      });\r\n    },\r\n    // 修改按钮\r\n    // 首先对弹窗填充对应行的值\r\n    // 打开弹窗\r\n    // 设置ajax请求路径（即设置请求method）\r\n    // 将被修改行存入this.editRow，方便操作成功后更新该数据\r\n    editHandler(index, row) {\r\n      // 对表单进行填值\r\n      // 迭代this.form而不是row\r\n      for (let item in this.form) {\r\n        this.form[item] = row[item];\r\n      }\r\n\r\n      // 打开表单弹窗\r\n      this.dialogFormVisible = true;\r\n\r\n      // 设置axios的ajax请求parms的method为EDIT\r\n      this.requestParams.method = 'edit';\r\n\r\n      // 将被修改行存入this.editRow，方便操作成功后更新该数据\r\n      this.editRow = row;\r\n    },\r\n    // 保存按钮\r\n    // 请求method在弹窗打开时已经设置\r\n    // 设置请求参数\r\n    saveRow() {\r\n      this.$refs.form.validate(result => {\r\n        var newData = {};\r\n\r\n        if (result) {\r\n          // 直接将表单提交，axios默认将数据转化为json\r\n          this.requestParams.data = this.form;\r\n\r\n          // 发起添加请求\r\n          crud(this.requestParams).then(res => {\r\n            // 后台返回成功\r\n            if (res.status >= 200 && res.status <= 300) {\r\n              let msg = res.data.msg,\r\n                  index = 0;\r\n\r\n              // 将结果存入新对象内\r\n              // 然后再插入this.sourceData中\r\n              // 防止后续修改对前面数据造成影响\r\n              for (let item in this.form) {\r\n                newData[item] = this.form[item];\r\n              }\r\n              // 如果是修改操作，则更新被操作数据\r\n              // 如果是增加操作，则增加该条数据\r\n              if (this.requestParams.method == 'edit') {\r\n                index = this.sourceData.indexOf(this.editRow);\r\n                this.sourceData.splice(index, 1, newData);\r\n              } else {\r\n                this.sourceData.splice(0, 0, newData);\r\n              }\r\n\r\n              // 再次设置自动完成的备选列表\r\n              this.setAutoList();\r\n              // console.log(index);\r\n              this.$message({\r\n                type: 'success',\r\n                message: msg + '数据保存成功！'\r\n              });\r\n\r\n              // 关闭弹窗\r\n              this.dialogFormVisible = false;\r\n            }\r\n          }, error => {\r\n            this.$message({\r\n              type: 'info',\r\n              message: '数据保存失败！'\r\n            });\r\n          });\r\n        } else {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '数据验证失败，请检查数据！！'\r\n          });\r\n        }\r\n      });\r\n    },\r\n    // 重新加载按钮\r\n    reloadHandler() {\r\n      this.$confirm('此操作将重新从后台请求数据, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n\r\n        // 确认重新加载后运行this.getData();\r\n        this.getData();\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消操作'\r\n        });\r\n      });\r\n    },\r\n    // 对列进行格式化\r\n    // 主要是对时间格式进行格式化显示\r\n    tableFormat(row, column, cellValue) {\r\n      var string = '',\r\n          date = null;\r\n\r\n      if (this.format.date.indexOf(column.property) >= 0) {\r\n        // cellValue不为空、null、undefined时才进行格式化，\r\n        // 否则返回空字符串\r\n        if (cellValue) {\r\n          date = new Date(cellValue);\r\n          string = date.getFullYear() + '-' +\r\n                    (date.getMonth() + 1) + '-' +\r\n                    date.getDate();\r\n        } else {\r\n          string = '';\r\n        }\r\n        cellValue = string;\r\n      }\r\n\r\n      return cellValue;\r\n    }\r\n  },\r\n  // 0、设置请求参数中的请求表格名\r\n  // 1、获取页面表格配置文件\r\n  // 2、添加需要双向数据绑定的字段（表单字段以及自动完成输入框字段）\r\n  // 3、获取原始表格数据\r\n  // 4、加载表单验证规则\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      // Code that will run only after the\r\n      // entire view has been rendered\r\n\r\n      // 0、设置请求参数中的请求表格名\r\n      this.requestParams.name = this.$route.name;\r\n\r\n      // 1、获取页面表格配置文件\r\n      var config = tableViewConfig[this.$route.name];\r\n      this.datagridConfig = config;\r\n\r\n      // 如果没有对应的config\r\n      // 则直接跳转到404页面\r\n      if (!config) {\r\n        this.$router.replace({name: '404'});\r\n        return;\r\n      }\r\n      // 2、添加需要双向数据绑定的字段（表单字段以及自动完成输入框字段）\r\n      // 添加双向绑定的表单字段\r\n      // 同时添加双向绑定的自动完成字段\r\n      // 同时添加需要格式化的字段\r\n      for (let i = 0; i < config.length; i++) {\r\n\r\n        // 日期字段需要进行format，所以将这些字段存储起来\r\n        if (config[i].type.indexOf('date') >= 0) {\r\n          this.format.date.splice(0, 0, config[i].field)\r\n        }\r\n\r\n        this.$set(this.form, config[i].field, '');\r\n\r\n        // 如果需要添加自动完成，而且没有预设该字段，则使用this.$set添加该字段\r\n        if (config[i].autoComplete && !this.autoComplete[config[i].field]) {\r\n          this.$set(this.autoComplete, config[i].field, []);\r\n        }\r\n      }\r\n\r\n      // 3、获取原始表格数据\r\n      this.getData();\r\n\r\n      // 4、加载表单验证规则\r\n      this.rules = rules;\r\n    });\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n  .edit-button {\r\n    height: 50px;\r\n    overflow: auto;\r\n  }\r\n  /*行内表单的高度*/\r\n  .inline-form {\r\n    height: 50px;\r\n  }\r\n</style>\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/main/views/Table.vue"],"sourceRoot":""}